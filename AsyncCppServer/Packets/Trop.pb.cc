// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Trop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TropPackets {

namespace {

const ::google::protobuf::Descriptor* PackA0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackA0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackB0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackB0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackB1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackB1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackB2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackB2_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackB3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackB3_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackC0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackC0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackC1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackC1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackC2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackC2_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackC3_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackC3_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackD0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackD0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackD1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackD1_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackE0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackE0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackF0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackF0_reflection_ = NULL;
const ::google::protobuf::Descriptor* PackG0_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PackG0_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Trop_2eproto() {
  protobuf_AddDesc_Trop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Trop.proto");
  GOOGLE_CHECK(file != NULL);
  PackA0_descriptor_ = file->message_type(0);
  static const int PackA0_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, timestamp_),
  };
  PackA0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackA0_descriptor_,
      PackA0::default_instance_,
      PackA0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackA0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, _is_default_instance_));
  PackB0_descriptor_ = file->message_type(1);
  static const int PackB0_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, mx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, my_),
  };
  PackB0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackB0_descriptor_,
      PackB0::default_instance_,
      PackB0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackB0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, _is_default_instance_));
  PackB1_descriptor_ = file->message_type(2);
  static const int PackB1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, id_),
  };
  PackB1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackB1_descriptor_,
      PackB1::default_instance_,
      PackB1_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackB1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, _is_default_instance_));
  PackB2_descriptor_ = file->message_type(3);
  static const int PackB2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB2, id_),
  };
  PackB2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackB2_descriptor_,
      PackB2::default_instance_,
      PackB2_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackB2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB2, _is_default_instance_));
  PackB3_descriptor_ = file->message_type(4);
  static const int PackB3_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB3, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB3, mx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB3, my_),
  };
  PackB3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackB3_descriptor_,
      PackB3::default_instance_,
      PackB3_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackB3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB3, _is_default_instance_));
  PackC0_descriptor_ = file->message_type(5);
  static const int PackC0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC0, bx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC0, by_),
  };
  PackC0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackC0_descriptor_,
      PackC0::default_instance_,
      PackC0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackC0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC0, _is_default_instance_));
  PackC1_descriptor_ = file->message_type(6);
  static const int PackC1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC1, blockarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC1, groundys_),
  };
  PackC1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackC1_descriptor_,
      PackC1::default_instance_,
      PackC1_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackC1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC1, _is_default_instance_));
  PackC2_descriptor_ = file->message_type(7);
  static const int PackC2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC2, shiftpositive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC2, horizontal_),
  };
  PackC2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackC2_descriptor_,
      PackC2::default_instance_,
      PackC2_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackC2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC2, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC2, _is_default_instance_));
  PackC3_descriptor_ = file->message_type(8);
  static const int PackC3_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, bx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, by_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, horizontal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, blockarr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, groundy_),
  };
  PackC3_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackC3_descriptor_,
      PackC3::default_instance_,
      PackC3_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackC3),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackC3, _is_default_instance_));
  PackD0_descriptor_ = file->message_type(9);
  static const int PackD0_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, bx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, by_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, type_),
  };
  PackD0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackD0_descriptor_,
      PackD0::default_instance_,
      PackD0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackD0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, _is_default_instance_));
  PackD1_descriptor_ = file->message_type(10);
  static const int PackD1_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, bx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, groundy_),
  };
  PackD1_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackD1_descriptor_,
      PackD1::default_instance_,
      PackD1_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackD1),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, _is_default_instance_));
  PackE0_descriptor_ = file->message_type(11);
  static const int PackE0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, bx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, blocktypes_),
  };
  PackE0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackE0_descriptor_,
      PackE0::default_instance_,
      PackE0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackE0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, _is_default_instance_));
  PackF0_descriptor_ = file->message_type(12);
  static const int PackF0_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, chattype_),
  };
  PackF0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackF0_descriptor_,
      PackF0::default_instance_,
      PackF0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackF0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, _is_default_instance_));
  PackG0_descriptor_ = file->message_type(13);
  static const int PackG0_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, mx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, my_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, mvx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, mvy_),
  };
  PackG0_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PackG0_descriptor_,
      PackG0::default_instance_,
      PackG0_offsets_,
      -1,
      -1,
      -1,
      sizeof(PackG0),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Trop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackA0_descriptor_, &PackA0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackB0_descriptor_, &PackB0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackB1_descriptor_, &PackB1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackB2_descriptor_, &PackB2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackB3_descriptor_, &PackB3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackC0_descriptor_, &PackC0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackC1_descriptor_, &PackC1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackC2_descriptor_, &PackC2::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackC3_descriptor_, &PackC3::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackD0_descriptor_, &PackD0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackD1_descriptor_, &PackD1::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackE0_descriptor_, &PackE0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackF0_descriptor_, &PackF0::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PackG0_descriptor_, &PackG0::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Trop_2eproto() {
  delete PackA0::default_instance_;
  delete PackA0_reflection_;
  delete PackB0::default_instance_;
  delete PackB0_reflection_;
  delete PackB1::default_instance_;
  delete PackB1_reflection_;
  delete PackB2::default_instance_;
  delete PackB2_reflection_;
  delete PackB3::default_instance_;
  delete PackB3_reflection_;
  delete PackC0::default_instance_;
  delete PackC0_reflection_;
  delete PackC1::default_instance_;
  delete PackC1_reflection_;
  delete PackC2::default_instance_;
  delete PackC2_reflection_;
  delete PackC3::default_instance_;
  delete PackC3_reflection_;
  delete PackD0::default_instance_;
  delete PackD0_reflection_;
  delete PackD1::default_instance_;
  delete PackD1_reflection_;
  delete PackE0::default_instance_;
  delete PackE0_reflection_;
  delete PackF0::default_instance_;
  delete PackF0_reflection_;
  delete PackG0::default_instance_;
  delete PackG0_reflection_;
}

void protobuf_AddDesc_Trop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nTrop.proto\022\013TropPackets\"\033\n\006PackA0\022\021\n\tt"
    "imeStamp\030\001 \001(\003\".\n\006PackB0\022\014\n\004name\030\001 \001(\t\022\n"
    "\n\002mX\030\002 \001(\002\022\n\n\002mY\030\003 \001(\002\"\024\n\006PackB1\022\n\n\002id\030\001"
    " \001(\r\"\024\n\006PackB2\022\n\n\002id\030\001 \001(\r\".\n\006PackB3\022\014\n\004"
    "name\030\001 \001(\t\022\n\n\002mX\030\002 \001(\002\022\n\n\002mY\030\003 \001(\002\" \n\006Pa"
    "ckC0\022\n\n\002bX\030\001 \001(\003\022\n\n\002bY\030\002 \001(\003\"4\n\006PackC1\022\024"
    "\n\010blockArr\030\001 \003(\rB\002\020\001\022\024\n\010groundYs\030\002 \003(\rB\002"
    "\020\001\"3\n\006PackC2\022\025\n\rshiftPositive\030\001 \001(\010\022\022\n\nh"
    "orizontal\030\002 \001(\010\"[\n\006PackC3\022\n\n\002bX\030\001 \001(\003\022\n\n"
    "\002bY\030\002 \001(\003\022\022\n\nhorizontal\030\003 \001(\010\022\024\n\010blockAr"
    "r\030\004 \003(\rB\002\020\001\022\017\n\007groundY\030\005 \001(\r\".\n\006PackD0\022\n"
    "\n\002bX\030\001 \001(\003\022\n\n\002bY\030\002 \001(\003\022\014\n\004type\030\003 \001(\r\"%\n\006"
    "PackD1\022\n\n\002bX\030\001 \001(\003\022\017\n\007groundY\030\002 \001(\r\"(\n\006P"
    "ackE0\022\n\n\002bX\030\001 \001(\003\022\022\n\nblockTypes\030\002 \003(\r\"\'\n"
    "\006PackF0\022\013\n\003msg\030\001 \001(\t\022\020\n\010chatType\030\002 \001(\r\":"
    "\n\006PackG0\022\n\n\002mX\030\001 \001(\002\022\n\n\002mY\030\002 \001(\002\022\013\n\003mVX\030"
    "\003 \001(\002\022\013\n\003mVY\030\004 \001(\002b\006proto3", 666);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Trop.proto", &protobuf_RegisterTypes);
  PackA0::default_instance_ = new PackA0();
  PackB0::default_instance_ = new PackB0();
  PackB1::default_instance_ = new PackB1();
  PackB2::default_instance_ = new PackB2();
  PackB3::default_instance_ = new PackB3();
  PackC0::default_instance_ = new PackC0();
  PackC1::default_instance_ = new PackC1();
  PackC2::default_instance_ = new PackC2();
  PackC3::default_instance_ = new PackC3();
  PackD0::default_instance_ = new PackD0();
  PackD1::default_instance_ = new PackD1();
  PackE0::default_instance_ = new PackE0();
  PackF0::default_instance_ = new PackF0();
  PackG0::default_instance_ = new PackG0();
  PackA0::default_instance_->InitAsDefaultInstance();
  PackB0::default_instance_->InitAsDefaultInstance();
  PackB1::default_instance_->InitAsDefaultInstance();
  PackB2::default_instance_->InitAsDefaultInstance();
  PackB3::default_instance_->InitAsDefaultInstance();
  PackC0::default_instance_->InitAsDefaultInstance();
  PackC1::default_instance_->InitAsDefaultInstance();
  PackC2::default_instance_->InitAsDefaultInstance();
  PackC3::default_instance_->InitAsDefaultInstance();
  PackD0::default_instance_->InitAsDefaultInstance();
  PackD1::default_instance_->InitAsDefaultInstance();
  PackE0::default_instance_->InitAsDefaultInstance();
  PackF0::default_instance_->InitAsDefaultInstance();
  PackG0::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Trop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Trop_2eproto {
  StaticDescriptorInitializer_Trop_2eproto() {
    protobuf_AddDesc_Trop_2eproto();
  }
} static_descriptor_initializer_Trop_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA0::kTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA0::PackA0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackA0)
}

void PackA0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackA0::PackA0(const PackA0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackA0)
}

void PackA0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_ = GOOGLE_LONGLONG(0);
}

PackA0::~PackA0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackA0)
  SharedDtor();
}

void PackA0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackA0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackA0_descriptor_;
}

const PackA0& PackA0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackA0* PackA0::default_instance_ = NULL;

PackA0* PackA0::New(::google::protobuf::Arena* arena) const {
  PackA0* n = new PackA0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA0::Clear() {
  timestamp_ = GOOGLE_LONGLONG(0);
}

bool PackA0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackA0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 timeStamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackA0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackA0)
  return false;
#undef DO_
}

void PackA0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackA0)
  // optional int64 timeStamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackA0)
}

::google::protobuf::uint8* PackA0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackA0)
  // optional int64 timeStamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackA0)
  return target;
}

int PackA0::ByteSize() const {
  int total_size = 0;

  // optional int64 timeStamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackA0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackA0::MergeFrom(const PackA0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void PackA0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA0::CopyFrom(const PackA0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA0::IsInitialized() const {

  return true;
}

void PackA0::Swap(PackA0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA0::InternalSwap(PackA0* other) {
  std::swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackA0_descriptor_;
  metadata.reflection = PackA0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA0

// optional int64 timeStamp = 1;
void PackA0::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackA0::timestamp() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackA0.timeStamp)
  return timestamp_;
}
 void PackA0::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackA0.timeStamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB0::kNameFieldNumber;
const int PackB0::kMXFieldNumber;
const int PackB0::kMYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB0::PackB0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackB0)
}

void PackB0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackB0::PackB0(const PackB0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackB0)
}

void PackB0::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mx_ = 0;
  my_ = 0;
}

PackB0::~PackB0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackB0)
  SharedDtor();
}

void PackB0::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PackB0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackB0_descriptor_;
}

const PackB0& PackB0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackB0* PackB0::default_instance_ = NULL;

PackB0* PackB0::New(::google::protobuf::Arena* arena) const {
  PackB0* n = new PackB0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB0::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackB0*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mx_, my_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PackB0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackB0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TropPackets.PackB0.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_mX;
        break;
      }

      // optional float mX = 2;
      case 2: {
        if (tag == 21) {
         parse_mX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_mY;
        break;
      }

      // optional float mY = 3;
      case 3: {
        if (tag == 29) {
         parse_mY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackB0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackB0)
  return false;
#undef DO_
}

void PackB0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackB0)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackB0.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->mx(), output);
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->my(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackB0)
}

::google::protobuf::uint8* PackB0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackB0)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackB0.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->mx(), target);
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->my(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackB0)
  return target;
}

int PackB0::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    total_size += 1 + 4;
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackB0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackB0::MergeFrom(const PackB0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mx() != 0) {
    set_mx(from.mx());
  }
  if (from.my() != 0) {
    set_my(from.my());
  }
}

void PackB0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB0::CopyFrom(const PackB0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB0::IsInitialized() const {

  return true;
}

void PackB0::Swap(PackB0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB0::InternalSwap(PackB0* other) {
  name_.Swap(&other->name_);
  std::swap(mx_, other->mx_);
  std::swap(my_, other->my_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackB0_descriptor_;
  metadata.reflection = PackB0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB0

// optional string name = 1;
void PackB0::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PackB0::name() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB0.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackB0::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TropPackets.PackB0.name)
}
 void PackB0::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TropPackets.PackB0.name)
}
 void PackB0::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TropPackets.PackB0.name)
}
 ::std::string* PackB0::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TropPackets.PackB0.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PackB0::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackB0::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TropPackets.PackB0.name)
}

// optional float mX = 2;
void PackB0::clear_mx() {
  mx_ = 0;
}
 float PackB0::mx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB0.mX)
  return mx_;
}
 void PackB0::set_mx(float value) {
  
  mx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB0.mX)
}

// optional float mY = 3;
void PackB0::clear_my() {
  my_ = 0;
}
 float PackB0::my() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB0.mY)
  return my_;
}
 void PackB0::set_my(float value) {
  
  my_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB0.mY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB1::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB1::PackB1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackB1)
}

void PackB1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackB1::PackB1(const PackB1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackB1)
}

void PackB1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

PackB1::~PackB1() {
  // @@protoc_insertion_point(destructor:TropPackets.PackB1)
  SharedDtor();
}

void PackB1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackB1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackB1_descriptor_;
}

const PackB1& PackB1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackB1* PackB1::default_instance_ = NULL;

PackB1* PackB1::New(::google::protobuf::Arena* arena) const {
  PackB1* n = new PackB1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB1::Clear() {
  id_ = 0u;
}

bool PackB1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackB1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackB1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackB1)
  return false;
#undef DO_
}

void PackB1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackB1)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackB1)
}

::google::protobuf::uint8* PackB1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackB1)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackB1)
  return target;
}

int PackB1::ByteSize() const {
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackB1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB1>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackB1::MergeFrom(const PackB1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PackB1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB1::CopyFrom(const PackB1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB1::IsInitialized() const {

  return true;
}

void PackB1::Swap(PackB1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB1::InternalSwap(PackB1* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackB1_descriptor_;
  metadata.reflection = PackB1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB1

// optional uint32 id = 1;
void PackB1::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 PackB1::id() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB1.id)
  return id_;
}
 void PackB1::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB1.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB2::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB2::PackB2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackB2)
}

void PackB2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackB2::PackB2(const PackB2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackB2)
}

void PackB2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
}

PackB2::~PackB2() {
  // @@protoc_insertion_point(destructor:TropPackets.PackB2)
  SharedDtor();
}

void PackB2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackB2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackB2_descriptor_;
}

const PackB2& PackB2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackB2* PackB2::default_instance_ = NULL;

PackB2* PackB2::New(::google::protobuf::Arena* arena) const {
  PackB2* n = new PackB2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB2::Clear() {
  id_ = 0u;
}

bool PackB2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackB2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackB2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackB2)
  return false;
#undef DO_
}

void PackB2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackB2)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackB2)
}

::google::protobuf::uint8* PackB2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackB2)
  // optional uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackB2)
  return target;
}

int PackB2::ByteSize() const {
  int total_size = 0;

  // optional uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackB2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB2>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackB2::MergeFrom(const PackB2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PackB2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB2::CopyFrom(const PackB2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB2::IsInitialized() const {

  return true;
}

void PackB2::Swap(PackB2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB2::InternalSwap(PackB2* other) {
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackB2_descriptor_;
  metadata.reflection = PackB2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB2

// optional uint32 id = 1;
void PackB2::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 PackB2::id() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB2.id)
  return id_;
}
 void PackB2::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB2.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB3::kNameFieldNumber;
const int PackB3::kMXFieldNumber;
const int PackB3::kMYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB3::PackB3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackB3)
}

void PackB3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackB3::PackB3(const PackB3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackB3)
}

void PackB3::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mx_ = 0;
  my_ = 0;
}

PackB3::~PackB3() {
  // @@protoc_insertion_point(destructor:TropPackets.PackB3)
  SharedDtor();
}

void PackB3::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PackB3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackB3_descriptor_;
}

const PackB3& PackB3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackB3* PackB3::default_instance_ = NULL;

PackB3* PackB3::New(::google::protobuf::Arena* arena) const {
  PackB3* n = new PackB3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB3::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackB3*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mx_, my_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PackB3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackB3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TropPackets.PackB3.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_mX;
        break;
      }

      // optional float mX = 2;
      case 2: {
        if (tag == 21) {
         parse_mX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_mY;
        break;
      }

      // optional float mY = 3;
      case 3: {
        if (tag == 29) {
         parse_mY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackB3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackB3)
  return false;
#undef DO_
}

void PackB3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackB3)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackB3.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->mx(), output);
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->my(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackB3)
}

::google::protobuf::uint8* PackB3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackB3)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackB3.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->mx(), target);
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->my(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackB3)
  return target;
}

int PackB3::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional float mX = 2;
  if (this->mx() != 0) {
    total_size += 1 + 4;
  }

  // optional float mY = 3;
  if (this->my() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB3::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackB3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB3>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackB3::MergeFrom(const PackB3& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mx() != 0) {
    set_mx(from.mx());
  }
  if (from.my() != 0) {
    set_my(from.my());
  }
}

void PackB3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB3::CopyFrom(const PackB3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB3::IsInitialized() const {

  return true;
}

void PackB3::Swap(PackB3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB3::InternalSwap(PackB3* other) {
  name_.Swap(&other->name_);
  std::swap(mx_, other->mx_);
  std::swap(my_, other->my_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackB3_descriptor_;
  metadata.reflection = PackB3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB3

// optional string name = 1;
void PackB3::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PackB3::name() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB3.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackB3::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TropPackets.PackB3.name)
}
 void PackB3::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TropPackets.PackB3.name)
}
 void PackB3::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TropPackets.PackB3.name)
}
 ::std::string* PackB3::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TropPackets.PackB3.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PackB3::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackB3::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TropPackets.PackB3.name)
}

// optional float mX = 2;
void PackB3::clear_mx() {
  mx_ = 0;
}
 float PackB3::mx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB3.mX)
  return mx_;
}
 void PackB3::set_mx(float value) {
  
  mx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB3.mX)
}

// optional float mY = 3;
void PackB3::clear_my() {
  my_ = 0;
}
 float PackB3::my() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackB3.mY)
  return my_;
}
 void PackB3::set_my(float value) {
  
  my_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackB3.mY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackC0::kBXFieldNumber;
const int PackC0::kBYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackC0::PackC0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackC0)
}

void PackC0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackC0::PackC0(const PackC0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackC0)
}

void PackC0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bx_ = GOOGLE_LONGLONG(0);
  by_ = GOOGLE_LONGLONG(0);
}

PackC0::~PackC0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackC0)
  SharedDtor();
}

void PackC0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackC0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackC0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackC0_descriptor_;
}

const PackC0& PackC0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackC0* PackC0::default_instance_ = NULL;

PackC0* PackC0::New(::google::protobuf::Arena* arena) const {
  PackC0* n = new PackC0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackC0::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackC0*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bx_, by_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackC0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackC0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bX = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bY;
        break;
      }

      // optional int64 bY = 2;
      case 2: {
        if (tag == 16) {
         parse_bY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &by_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackC0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackC0)
  return false;
#undef DO_
}

void PackC0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackC0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bx(), output);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->by(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackC0)
}

::google::protobuf::uint8* PackC0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackC0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bx(), target);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->by(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackC0)
  return target;
}

int PackC0::ByteSize() const {
  int total_size = 0;

  // optional int64 bX = 1;
  if (this->bx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bx());
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->by());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackC0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackC0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackC0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackC0::MergeFrom(const PackC0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.bx() != 0) {
    set_bx(from.bx());
  }
  if (from.by() != 0) {
    set_by(from.by());
  }
}

void PackC0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackC0::CopyFrom(const PackC0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackC0::IsInitialized() const {

  return true;
}

void PackC0::Swap(PackC0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackC0::InternalSwap(PackC0* other) {
  std::swap(bx_, other->bx_);
  std::swap(by_, other->by_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackC0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackC0_descriptor_;
  metadata.reflection = PackC0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackC0

// optional int64 bX = 1;
void PackC0::clear_bx() {
  bx_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackC0::bx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC0.bX)
  return bx_;
}
 void PackC0::set_bx(::google::protobuf::int64 value) {
  
  bx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC0.bX)
}

// optional int64 bY = 2;
void PackC0::clear_by() {
  by_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackC0::by() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC0.bY)
  return by_;
}
 void PackC0::set_by(::google::protobuf::int64 value) {
  
  by_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC0.bY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackC1::kBlockArrFieldNumber;
const int PackC1::kGroundYsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackC1::PackC1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackC1)
}

void PackC1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackC1::PackC1(const PackC1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackC1)
}

void PackC1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PackC1::~PackC1() {
  // @@protoc_insertion_point(destructor:TropPackets.PackC1)
  SharedDtor();
}

void PackC1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackC1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackC1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackC1_descriptor_;
}

const PackC1& PackC1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackC1* PackC1::default_instance_ = NULL;

PackC1* PackC1::New(::google::protobuf::Arena* arena) const {
  PackC1* n = new PackC1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackC1::Clear() {
  blockarr_.Clear();
  groundys_.Clear();
}

bool PackC1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackC1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 blockArr = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blockarr())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_blockarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_groundYs;
        break;
      }

      // repeated uint32 groundYs = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_groundYs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_groundys())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_groundys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackC1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackC1)
  return false;
#undef DO_
}

void PackC1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackC1)
  // repeated uint32 blockArr = 1 [packed = true];
  if (this->blockarr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_blockarr_cached_byte_size_);
  }
  for (int i = 0; i < this->blockarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blockarr(i), output);
  }

  // repeated uint32 groundYs = 2 [packed = true];
  if (this->groundys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_groundys_cached_byte_size_);
  }
  for (int i = 0; i < this->groundys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->groundys(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackC1)
}

::google::protobuf::uint8* PackC1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackC1)
  // repeated uint32 blockArr = 1 [packed = true];
  if (this->blockarr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _blockarr_cached_byte_size_, target);
  }
  for (int i = 0; i < this->blockarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blockarr(i), target);
  }

  // repeated uint32 groundYs = 2 [packed = true];
  if (this->groundys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _groundys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->groundys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->groundys(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackC1)
  return target;
}

int PackC1::ByteSize() const {
  int total_size = 0;

  // repeated uint32 blockArr = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->blockarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->blockarr(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blockarr_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 groundYs = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->groundys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->groundys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _groundys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackC1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackC1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackC1>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackC1::MergeFrom(const PackC1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  blockarr_.MergeFrom(from.blockarr_);
  groundys_.MergeFrom(from.groundys_);
}

void PackC1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackC1::CopyFrom(const PackC1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackC1::IsInitialized() const {

  return true;
}

void PackC1::Swap(PackC1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackC1::InternalSwap(PackC1* other) {
  blockarr_.UnsafeArenaSwap(&other->blockarr_);
  groundys_.UnsafeArenaSwap(&other->groundys_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackC1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackC1_descriptor_;
  metadata.reflection = PackC1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackC1

// repeated uint32 blockArr = 1 [packed = true];
int PackC1::blockarr_size() const {
  return blockarr_.size();
}
void PackC1::clear_blockarr() {
  blockarr_.Clear();
}
 ::google::protobuf::uint32 PackC1::blockarr(int index) const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC1.blockArr)
  return blockarr_.Get(index);
}
 void PackC1::set_blockarr(int index, ::google::protobuf::uint32 value) {
  blockarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:TropPackets.PackC1.blockArr)
}
 void PackC1::add_blockarr(::google::protobuf::uint32 value) {
  blockarr_.Add(value);
  // @@protoc_insertion_point(field_add:TropPackets.PackC1.blockArr)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackC1::blockarr() const {
  // @@protoc_insertion_point(field_list:TropPackets.PackC1.blockArr)
  return blockarr_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackC1::mutable_blockarr() {
  // @@protoc_insertion_point(field_mutable_list:TropPackets.PackC1.blockArr)
  return &blockarr_;
}

// repeated uint32 groundYs = 2 [packed = true];
int PackC1::groundys_size() const {
  return groundys_.size();
}
void PackC1::clear_groundys() {
  groundys_.Clear();
}
 ::google::protobuf::uint32 PackC1::groundys(int index) const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC1.groundYs)
  return groundys_.Get(index);
}
 void PackC1::set_groundys(int index, ::google::protobuf::uint32 value) {
  groundys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TropPackets.PackC1.groundYs)
}
 void PackC1::add_groundys(::google::protobuf::uint32 value) {
  groundys_.Add(value);
  // @@protoc_insertion_point(field_add:TropPackets.PackC1.groundYs)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackC1::groundys() const {
  // @@protoc_insertion_point(field_list:TropPackets.PackC1.groundYs)
  return groundys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackC1::mutable_groundys() {
  // @@protoc_insertion_point(field_mutable_list:TropPackets.PackC1.groundYs)
  return &groundys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackC2::kShiftPositiveFieldNumber;
const int PackC2::kHorizontalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackC2::PackC2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackC2)
}

void PackC2::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackC2::PackC2(const PackC2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackC2)
}

void PackC2::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  shiftpositive_ = false;
  horizontal_ = false;
}

PackC2::~PackC2() {
  // @@protoc_insertion_point(destructor:TropPackets.PackC2)
  SharedDtor();
}

void PackC2::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackC2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackC2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackC2_descriptor_;
}

const PackC2& PackC2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackC2* PackC2::default_instance_ = NULL;

PackC2* PackC2::New(::google::protobuf::Arena* arena) const {
  PackC2* n = new PackC2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackC2::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackC2*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shiftpositive_, horizontal_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackC2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackC2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool shiftPositive = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shiftpositive_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_horizontal;
        break;
      }

      // optional bool horizontal = 2;
      case 2: {
        if (tag == 16) {
         parse_horizontal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &horizontal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackC2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackC2)
  return false;
#undef DO_
}

void PackC2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackC2)
  // optional bool shiftPositive = 1;
  if (this->shiftpositive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->shiftpositive(), output);
  }

  // optional bool horizontal = 2;
  if (this->horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->horizontal(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackC2)
}

::google::protobuf::uint8* PackC2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackC2)
  // optional bool shiftPositive = 1;
  if (this->shiftpositive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->shiftpositive(), target);
  }

  // optional bool horizontal = 2;
  if (this->horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->horizontal(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackC2)
  return target;
}

int PackC2::ByteSize() const {
  int total_size = 0;

  // optional bool shiftPositive = 1;
  if (this->shiftpositive() != 0) {
    total_size += 1 + 1;
  }

  // optional bool horizontal = 2;
  if (this->horizontal() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackC2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackC2* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackC2>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackC2::MergeFrom(const PackC2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.shiftpositive() != 0) {
    set_shiftpositive(from.shiftpositive());
  }
  if (from.horizontal() != 0) {
    set_horizontal(from.horizontal());
  }
}

void PackC2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackC2::CopyFrom(const PackC2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackC2::IsInitialized() const {

  return true;
}

void PackC2::Swap(PackC2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackC2::InternalSwap(PackC2* other) {
  std::swap(shiftpositive_, other->shiftpositive_);
  std::swap(horizontal_, other->horizontal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackC2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackC2_descriptor_;
  metadata.reflection = PackC2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackC2

// optional bool shiftPositive = 1;
void PackC2::clear_shiftpositive() {
  shiftpositive_ = false;
}
 bool PackC2::shiftpositive() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC2.shiftPositive)
  return shiftpositive_;
}
 void PackC2::set_shiftpositive(bool value) {
  
  shiftpositive_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC2.shiftPositive)
}

// optional bool horizontal = 2;
void PackC2::clear_horizontal() {
  horizontal_ = false;
}
 bool PackC2::horizontal() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC2.horizontal)
  return horizontal_;
}
 void PackC2::set_horizontal(bool value) {
  
  horizontal_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC2.horizontal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackC3::kBXFieldNumber;
const int PackC3::kBYFieldNumber;
const int PackC3::kHorizontalFieldNumber;
const int PackC3::kBlockArrFieldNumber;
const int PackC3::kGroundYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackC3::PackC3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackC3)
}

void PackC3::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackC3::PackC3(const PackC3& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackC3)
}

void PackC3::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bx_ = GOOGLE_LONGLONG(0);
  by_ = GOOGLE_LONGLONG(0);
  horizontal_ = false;
  groundy_ = 0u;
}

PackC3::~PackC3() {
  // @@protoc_insertion_point(destructor:TropPackets.PackC3)
  SharedDtor();
}

void PackC3::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackC3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackC3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackC3_descriptor_;
}

const PackC3& PackC3::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackC3* PackC3::default_instance_ = NULL;

PackC3* PackC3::New(::google::protobuf::Arena* arena) const {
  PackC3* n = new PackC3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackC3::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackC3*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bx_, by_);
  ZR_(horizontal_, groundy_);

#undef ZR_HELPER_
#undef ZR_

  blockarr_.Clear();
}

bool PackC3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackC3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bX = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bY;
        break;
      }

      // optional int64 bY = 2;
      case 2: {
        if (tag == 16) {
         parse_bY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &by_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_horizontal;
        break;
      }

      // optional bool horizontal = 3;
      case 3: {
        if (tag == 24) {
         parse_horizontal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &horizontal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_blockArr;
        break;
      }

      // repeated uint32 blockArr = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_blockArr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blockarr())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34, input, this->mutable_blockarr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_groundY;
        break;
      }

      // optional uint32 groundY = 5;
      case 5: {
        if (tag == 40) {
         parse_groundY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groundy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackC3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackC3)
  return false;
#undef DO_
}

void PackC3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackC3)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bx(), output);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->by(), output);
  }

  // optional bool horizontal = 3;
  if (this->horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->horizontal(), output);
  }

  // repeated uint32 blockArr = 4 [packed = true];
  if (this->blockarr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_blockarr_cached_byte_size_);
  }
  for (int i = 0; i < this->blockarr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blockarr(i), output);
  }

  // optional uint32 groundY = 5;
  if (this->groundy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->groundy(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackC3)
}

::google::protobuf::uint8* PackC3::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackC3)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bx(), target);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->by(), target);
  }

  // optional bool horizontal = 3;
  if (this->horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->horizontal(), target);
  }

  // repeated uint32 blockArr = 4 [packed = true];
  if (this->blockarr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _blockarr_cached_byte_size_, target);
  }
  for (int i = 0; i < this->blockarr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blockarr(i), target);
  }

  // optional uint32 groundY = 5;
  if (this->groundy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->groundy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackC3)
  return target;
}

int PackC3::ByteSize() const {
  int total_size = 0;

  // optional int64 bX = 1;
  if (this->bx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bx());
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->by());
  }

  // optional bool horizontal = 3;
  if (this->horizontal() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 groundY = 5;
  if (this->groundy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groundy());
  }

  // repeated uint32 blockArr = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->blockarr_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->blockarr(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blockarr_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackC3::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackC3* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackC3>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackC3::MergeFrom(const PackC3& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  blockarr_.MergeFrom(from.blockarr_);
  if (from.bx() != 0) {
    set_bx(from.bx());
  }
  if (from.by() != 0) {
    set_by(from.by());
  }
  if (from.horizontal() != 0) {
    set_horizontal(from.horizontal());
  }
  if (from.groundy() != 0) {
    set_groundy(from.groundy());
  }
}

void PackC3::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackC3::CopyFrom(const PackC3& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackC3::IsInitialized() const {

  return true;
}

void PackC3::Swap(PackC3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackC3::InternalSwap(PackC3* other) {
  std::swap(bx_, other->bx_);
  std::swap(by_, other->by_);
  std::swap(horizontal_, other->horizontal_);
  blockarr_.UnsafeArenaSwap(&other->blockarr_);
  std::swap(groundy_, other->groundy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackC3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackC3_descriptor_;
  metadata.reflection = PackC3_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackC3

// optional int64 bX = 1;
void PackC3::clear_bx() {
  bx_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackC3::bx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC3.bX)
  return bx_;
}
 void PackC3::set_bx(::google::protobuf::int64 value) {
  
  bx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC3.bX)
}

// optional int64 bY = 2;
void PackC3::clear_by() {
  by_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackC3::by() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC3.bY)
  return by_;
}
 void PackC3::set_by(::google::protobuf::int64 value) {
  
  by_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC3.bY)
}

// optional bool horizontal = 3;
void PackC3::clear_horizontal() {
  horizontal_ = false;
}
 bool PackC3::horizontal() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC3.horizontal)
  return horizontal_;
}
 void PackC3::set_horizontal(bool value) {
  
  horizontal_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC3.horizontal)
}

// repeated uint32 blockArr = 4 [packed = true];
int PackC3::blockarr_size() const {
  return blockarr_.size();
}
void PackC3::clear_blockarr() {
  blockarr_.Clear();
}
 ::google::protobuf::uint32 PackC3::blockarr(int index) const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC3.blockArr)
  return blockarr_.Get(index);
}
 void PackC3::set_blockarr(int index, ::google::protobuf::uint32 value) {
  blockarr_.Set(index, value);
  // @@protoc_insertion_point(field_set:TropPackets.PackC3.blockArr)
}
 void PackC3::add_blockarr(::google::protobuf::uint32 value) {
  blockarr_.Add(value);
  // @@protoc_insertion_point(field_add:TropPackets.PackC3.blockArr)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackC3::blockarr() const {
  // @@protoc_insertion_point(field_list:TropPackets.PackC3.blockArr)
  return blockarr_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackC3::mutable_blockarr() {
  // @@protoc_insertion_point(field_mutable_list:TropPackets.PackC3.blockArr)
  return &blockarr_;
}

// optional uint32 groundY = 5;
void PackC3::clear_groundy() {
  groundy_ = 0u;
}
 ::google::protobuf::uint32 PackC3::groundy() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackC3.groundY)
  return groundy_;
}
 void PackC3::set_groundy(::google::protobuf::uint32 value) {
  
  groundy_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackC3.groundY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackD0::kBXFieldNumber;
const int PackD0::kBYFieldNumber;
const int PackD0::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackD0::PackD0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackD0)
}

void PackD0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackD0::PackD0(const PackD0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackD0)
}

void PackD0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bx_ = GOOGLE_LONGLONG(0);
  by_ = GOOGLE_LONGLONG(0);
  type_ = 0u;
}

PackD0::~PackD0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackD0)
  SharedDtor();
}

void PackD0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackD0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackD0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackD0_descriptor_;
}

const PackD0& PackD0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackD0* PackD0::default_instance_ = NULL;

PackD0* PackD0::New(::google::protobuf::Arena* arena) const {
  PackD0* n = new PackD0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackD0::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackD0*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bx_, type_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackD0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackD0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bX = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bY;
        break;
      }

      // optional int64 bY = 2;
      case 2: {
        if (tag == 16) {
         parse_bY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &by_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional uint32 type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackD0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackD0)
  return false;
#undef DO_
}

void PackD0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackD0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bx(), output);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->by(), output);
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackD0)
}

::google::protobuf::uint8* PackD0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackD0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bx(), target);
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->by(), target);
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackD0)
  return target;
}

int PackD0::ByteSize() const {
  int total_size = 0;

  // optional int64 bX = 1;
  if (this->bx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bx());
  }

  // optional int64 bY = 2;
  if (this->by() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->by());
  }

  // optional uint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackD0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackD0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackD0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackD0::MergeFrom(const PackD0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.bx() != 0) {
    set_bx(from.bx());
  }
  if (from.by() != 0) {
    set_by(from.by());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void PackD0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackD0::CopyFrom(const PackD0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackD0::IsInitialized() const {

  return true;
}

void PackD0::Swap(PackD0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackD0::InternalSwap(PackD0* other) {
  std::swap(bx_, other->bx_);
  std::swap(by_, other->by_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackD0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackD0_descriptor_;
  metadata.reflection = PackD0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackD0

// optional int64 bX = 1;
void PackD0::clear_bx() {
  bx_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackD0::bx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackD0.bX)
  return bx_;
}
 void PackD0::set_bx(::google::protobuf::int64 value) {
  
  bx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackD0.bX)
}

// optional int64 bY = 2;
void PackD0::clear_by() {
  by_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackD0::by() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackD0.bY)
  return by_;
}
 void PackD0::set_by(::google::protobuf::int64 value) {
  
  by_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackD0.bY)
}

// optional uint32 type = 3;
void PackD0::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 PackD0::type() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackD0.type)
  return type_;
}
 void PackD0::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackD0.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackD1::kBXFieldNumber;
const int PackD1::kGroundYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackD1::PackD1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackD1)
}

void PackD1::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackD1::PackD1(const PackD1& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackD1)
}

void PackD1::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bx_ = GOOGLE_LONGLONG(0);
  groundy_ = 0u;
}

PackD1::~PackD1() {
  // @@protoc_insertion_point(destructor:TropPackets.PackD1)
  SharedDtor();
}

void PackD1::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackD1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackD1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackD1_descriptor_;
}

const PackD1& PackD1::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackD1* PackD1::default_instance_ = NULL;

PackD1* PackD1::New(::google::protobuf::Arena* arena) const {
  PackD1* n = new PackD1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackD1::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackD1*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(bx_, groundy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackD1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackD1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bX = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_groundY;
        break;
      }

      // optional uint32 groundY = 2;
      case 2: {
        if (tag == 16) {
         parse_groundY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groundy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackD1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackD1)
  return false;
#undef DO_
}

void PackD1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackD1)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bx(), output);
  }

  // optional uint32 groundY = 2;
  if (this->groundy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->groundy(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackD1)
}

::google::protobuf::uint8* PackD1::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackD1)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bx(), target);
  }

  // optional uint32 groundY = 2;
  if (this->groundy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->groundy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackD1)
  return target;
}

int PackD1::ByteSize() const {
  int total_size = 0;

  // optional int64 bX = 1;
  if (this->bx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bx());
  }

  // optional uint32 groundY = 2;
  if (this->groundy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->groundy());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackD1::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackD1* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackD1>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackD1::MergeFrom(const PackD1& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.bx() != 0) {
    set_bx(from.bx());
  }
  if (from.groundy() != 0) {
    set_groundy(from.groundy());
  }
}

void PackD1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackD1::CopyFrom(const PackD1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackD1::IsInitialized() const {

  return true;
}

void PackD1::Swap(PackD1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackD1::InternalSwap(PackD1* other) {
  std::swap(bx_, other->bx_);
  std::swap(groundy_, other->groundy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackD1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackD1_descriptor_;
  metadata.reflection = PackD1_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackD1

// optional int64 bX = 1;
void PackD1::clear_bx() {
  bx_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackD1::bx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackD1.bX)
  return bx_;
}
 void PackD1::set_bx(::google::protobuf::int64 value) {
  
  bx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackD1.bX)
}

// optional uint32 groundY = 2;
void PackD1::clear_groundy() {
  groundy_ = 0u;
}
 ::google::protobuf::uint32 PackD1::groundy() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackD1.groundY)
  return groundy_;
}
 void PackD1::set_groundy(::google::protobuf::uint32 value) {
  
  groundy_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackD1.groundY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackE0::kBXFieldNumber;
const int PackE0::kBlockTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackE0::PackE0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackE0)
}

void PackE0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackE0::PackE0(const PackE0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackE0)
}

void PackE0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  bx_ = GOOGLE_LONGLONG(0);
}

PackE0::~PackE0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackE0)
  SharedDtor();
}

void PackE0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackE0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackE0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackE0_descriptor_;
}

const PackE0& PackE0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackE0* PackE0::default_instance_ = NULL;

PackE0* PackE0::New(::google::protobuf::Arena* arena) const {
  PackE0* n = new PackE0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackE0::Clear() {
  bx_ = GOOGLE_LONGLONG(0);
  blocktypes_.Clear();
}

bool PackE0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackE0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bX = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_blockTypes;
        break;
      }

      // repeated uint32 blockTypes = 2;
      case 2: {
        if (tag == 18) {
         parse_blockTypes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blocktypes())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_blocktypes())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackE0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackE0)
  return false;
#undef DO_
}

void PackE0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackE0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bx(), output);
  }

  // repeated uint32 blockTypes = 2;
  if (this->blocktypes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_blocktypes_cached_byte_size_);
  }
  for (int i = 0; i < this->blocktypes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blocktypes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackE0)
}

::google::protobuf::uint8* PackE0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackE0)
  // optional int64 bX = 1;
  if (this->bx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bx(), target);
  }

  // repeated uint32 blockTypes = 2;
  if (this->blocktypes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _blocktypes_cached_byte_size_, target);
  }
  for (int i = 0; i < this->blocktypes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blocktypes(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackE0)
  return target;
}

int PackE0::ByteSize() const {
  int total_size = 0;

  // optional int64 bX = 1;
  if (this->bx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bx());
  }

  // repeated uint32 blockTypes = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->blocktypes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->blocktypes(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blocktypes_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackE0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackE0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackE0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackE0::MergeFrom(const PackE0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  blocktypes_.MergeFrom(from.blocktypes_);
  if (from.bx() != 0) {
    set_bx(from.bx());
  }
}

void PackE0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackE0::CopyFrom(const PackE0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackE0::IsInitialized() const {

  return true;
}

void PackE0::Swap(PackE0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackE0::InternalSwap(PackE0* other) {
  std::swap(bx_, other->bx_);
  blocktypes_.UnsafeArenaSwap(&other->blocktypes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackE0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackE0_descriptor_;
  metadata.reflection = PackE0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackE0

// optional int64 bX = 1;
void PackE0::clear_bx() {
  bx_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PackE0::bx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackE0.bX)
  return bx_;
}
 void PackE0::set_bx(::google::protobuf::int64 value) {
  
  bx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackE0.bX)
}

// repeated uint32 blockTypes = 2;
int PackE0::blocktypes_size() const {
  return blocktypes_.size();
}
void PackE0::clear_blocktypes() {
  blocktypes_.Clear();
}
 ::google::protobuf::uint32 PackE0::blocktypes(int index) const {
  // @@protoc_insertion_point(field_get:TropPackets.PackE0.blockTypes)
  return blocktypes_.Get(index);
}
 void PackE0::set_blocktypes(int index, ::google::protobuf::uint32 value) {
  blocktypes_.Set(index, value);
  // @@protoc_insertion_point(field_set:TropPackets.PackE0.blockTypes)
}
 void PackE0::add_blocktypes(::google::protobuf::uint32 value) {
  blocktypes_.Add(value);
  // @@protoc_insertion_point(field_add:TropPackets.PackE0.blockTypes)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackE0::blocktypes() const {
  // @@protoc_insertion_point(field_list:TropPackets.PackE0.blockTypes)
  return blocktypes_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackE0::mutable_blocktypes() {
  // @@protoc_insertion_point(field_mutable_list:TropPackets.PackE0.blockTypes)
  return &blocktypes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackF0::kMsgFieldNumber;
const int PackF0::kChatTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackF0::PackF0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackF0)
}

void PackF0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackF0::PackF0(const PackF0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackF0)
}

void PackF0::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chattype_ = 0u;
}

PackF0::~PackF0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackF0)
  SharedDtor();
}

void PackF0::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PackF0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackF0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackF0_descriptor_;
}

const PackF0& PackF0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackF0* PackF0::default_instance_ = NULL;

PackF0* PackF0::New(::google::protobuf::Arena* arena) const {
  PackF0* n = new PackF0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackF0::Clear() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chattype_ = 0u;
}

bool PackF0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackF0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TropPackets.PackF0.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_chatType;
        break;
      }

      // optional uint32 chatType = 2;
      case 2: {
        if (tag == 16) {
         parse_chatType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chattype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackF0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackF0)
  return false;
#undef DO_
}

void PackF0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackF0)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackF0.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // optional uint32 chatType = 2;
  if (this->chattype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->chattype(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackF0)
}

::google::protobuf::uint8* PackF0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackF0)
  // optional string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TropPackets.PackF0.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // optional uint32 chatType = 2;
  if (this->chattype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->chattype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackF0)
  return target;
}

int PackF0::ByteSize() const {
  int total_size = 0;

  // optional string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // optional uint32 chatType = 2;
  if (this->chattype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chattype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackF0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackF0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackF0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackF0::MergeFrom(const PackF0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.chattype() != 0) {
    set_chattype(from.chattype());
  }
}

void PackF0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackF0::CopyFrom(const PackF0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackF0::IsInitialized() const {

  return true;
}

void PackF0::Swap(PackF0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackF0::InternalSwap(PackF0* other) {
  msg_.Swap(&other->msg_);
  std::swap(chattype_, other->chattype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackF0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackF0_descriptor_;
  metadata.reflection = PackF0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackF0

// optional string msg = 1;
void PackF0::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PackF0::msg() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackF0.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackF0::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TropPackets.PackF0.msg)
}
 void PackF0::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TropPackets.PackF0.msg)
}
 void PackF0::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TropPackets.PackF0.msg)
}
 ::std::string* PackF0::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:TropPackets.PackF0.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PackF0::release_msg() {
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PackF0::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:TropPackets.PackF0.msg)
}

// optional uint32 chatType = 2;
void PackF0::clear_chattype() {
  chattype_ = 0u;
}
 ::google::protobuf::uint32 PackF0::chattype() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackF0.chatType)
  return chattype_;
}
 void PackF0::set_chattype(::google::protobuf::uint32 value) {
  
  chattype_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackF0.chatType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackG0::kMXFieldNumber;
const int PackG0::kMYFieldNumber;
const int PackG0::kMVXFieldNumber;
const int PackG0::kMVYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackG0::PackG0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TropPackets.PackG0)
}

void PackG0::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PackG0::PackG0(const PackG0& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TropPackets.PackG0)
}

void PackG0::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mx_ = 0;
  my_ = 0;
  mvx_ = 0;
  mvy_ = 0;
}

PackG0::~PackG0() {
  // @@protoc_insertion_point(destructor:TropPackets.PackG0)
  SharedDtor();
}

void PackG0::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PackG0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackG0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PackG0_descriptor_;
}

const PackG0& PackG0::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Trop_2eproto();
  return *default_instance_;
}

PackG0* PackG0::default_instance_ = NULL;

PackG0* PackG0::New(::google::protobuf::Arena* arena) const {
  PackG0* n = new PackG0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackG0::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PackG0*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mx_, mvy_);

#undef ZR_HELPER_
#undef ZR_

}

bool PackG0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TropPackets.PackG0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float mX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_mY;
        break;
      }

      // optional float mY = 2;
      case 2: {
        if (tag == 21) {
         parse_mY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_mVX;
        break;
      }

      // optional float mVX = 3;
      case 3: {
        if (tag == 29) {
         parse_mVX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mvx_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_mVY;
        break;
      }

      // optional float mVY = 4;
      case 4: {
        if (tag == 37) {
         parse_mVY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mvy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TropPackets.PackG0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TropPackets.PackG0)
  return false;
#undef DO_
}

void PackG0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TropPackets.PackG0)
  // optional float mX = 1;
  if (this->mx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->mx(), output);
  }

  // optional float mY = 2;
  if (this->my() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->my(), output);
  }

  // optional float mVX = 3;
  if (this->mvx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->mvx(), output);
  }

  // optional float mVY = 4;
  if (this->mvy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->mvy(), output);
  }

  // @@protoc_insertion_point(serialize_end:TropPackets.PackG0)
}

::google::protobuf::uint8* PackG0::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TropPackets.PackG0)
  // optional float mX = 1;
  if (this->mx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->mx(), target);
  }

  // optional float mY = 2;
  if (this->my() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->my(), target);
  }

  // optional float mVX = 3;
  if (this->mvx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->mvx(), target);
  }

  // optional float mVY = 4;
  if (this->mvy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->mvy(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TropPackets.PackG0)
  return target;
}

int PackG0::ByteSize() const {
  int total_size = 0;

  // optional float mX = 1;
  if (this->mx() != 0) {
    total_size += 1 + 4;
  }

  // optional float mY = 2;
  if (this->my() != 0) {
    total_size += 1 + 4;
  }

  // optional float mVX = 3;
  if (this->mvx() != 0) {
    total_size += 1 + 4;
  }

  // optional float mVY = 4;
  if (this->mvy() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackG0::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PackG0* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PackG0>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PackG0::MergeFrom(const PackG0& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.mx() != 0) {
    set_mx(from.mx());
  }
  if (from.my() != 0) {
    set_my(from.my());
  }
  if (from.mvx() != 0) {
    set_mvx(from.mvx());
  }
  if (from.mvy() != 0) {
    set_mvy(from.mvy());
  }
}

void PackG0::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackG0::CopyFrom(const PackG0& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackG0::IsInitialized() const {

  return true;
}

void PackG0::Swap(PackG0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackG0::InternalSwap(PackG0* other) {
  std::swap(mx_, other->mx_);
  std::swap(my_, other->my_);
  std::swap(mvx_, other->mvx_);
  std::swap(mvy_, other->mvy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackG0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PackG0_descriptor_;
  metadata.reflection = PackG0_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackG0

// optional float mX = 1;
void PackG0::clear_mx() {
  mx_ = 0;
}
 float PackG0::mx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackG0.mX)
  return mx_;
}
 void PackG0::set_mx(float value) {
  
  mx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackG0.mX)
}

// optional float mY = 2;
void PackG0::clear_my() {
  my_ = 0;
}
 float PackG0::my() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackG0.mY)
  return my_;
}
 void PackG0::set_my(float value) {
  
  my_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackG0.mY)
}

// optional float mVX = 3;
void PackG0::clear_mvx() {
  mvx_ = 0;
}
 float PackG0::mvx() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackG0.mVX)
  return mvx_;
}
 void PackG0::set_mvx(float value) {
  
  mvx_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackG0.mVX)
}

// optional float mVY = 4;
void PackG0::clear_mvy() {
  mvy_ = 0;
}
 float PackG0::mvy() const {
  // @@protoc_insertion_point(field_get:TropPackets.PackG0.mVY)
  return mvy_;
}
 void PackG0::set_mvy(float value) {
  
  mvy_ = value;
  // @@protoc_insertion_point(field_set:TropPackets.PackG0.mVY)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace TropPackets

// @@protoc_insertion_point(global_scope)
